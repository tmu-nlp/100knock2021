#「パトカー」＋「タクシー」の文字を先頭から交互に連結して文字列「パタトクカシーー」を得よ．

str1 = 'パトカー'
str2 = 'タクシー'
l = []
str_l = []
zipped = zip(str1,str2)     # 使用zip()函数将对象对应元素打包成一个个元组，返回由元组组成的列表。
for c1,c2 in zipped:        # 遍历列表中每一个元组的每一个元素
  # print(type(c1+c2))
  l.append(c1+c2)            # 元素拼接成字符串后，追加到列表中

print(''.join(l))              # 将列表转换为字符串

# zip()函数语法
# zip([iterator,...])
# 将可迭代的对象作为参数，将对象中对应元素打包为一个个元祖，返回有元祖组成的列表。如果各个迭代器的元素个数不一致，返回列表的长度与最短的对象相同；
# 使用*，可以将元祖解压为列表。

# 另参考别人有一种更简洁的写法，如下：
# str1 = 'パトカー'
# str2 = 'タクシー'
# print ''.join(c1+c2 for c1,c2 in zip(str1,str2)) 